version: '3.4'

services:
  nginx:
    image: nginx:alpine
    ports:
        - 80:80
        - 443:443
    volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
        - commentsapi
        - reviewsapi
        - authapi
  
  rabbitmq:
    image: rabbitmq:management
    container_name: reviews_rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5
  
  authapi:
    image: ${DOCKER_REGISTRY-}authapi
    build:
      context: .
      dockerfile: AuthAPI/Dockerfile
    depends_on:
      - mongo_db_review
        
  reviewsapi:
    image: ${DOCKER_REGISTRY-}reviewsapi
    build:
      context: .
      dockerfile: ReviewsAPI/Dockerfile
    restart: on-failure
    depends_on:
      - mongo_db_auth
      - rabbitmq
    links:
      - rabbitmq

  commentsapi:
    image: ${DOCKER_REGISTRY-}commentsapi
    build:
      context: .
      dockerfile: CommentsAPI/Dockerfile
    restart: on-failure
    depends_on:
      - mongo_db_comment
      - rabbitmq
    links:
      - rabbitmq
        
  mongo_db_auth:
    container_name: reviews_db_container_auth
    image: mongo:latest
    restart: always
    ports:
      - '27018:27017'
    volumes:
      - mongo_db_auth:/data/db

  mongo_db_review:
    container_name: reviews_db_container_review
    image: mongo:latest
    restart: always
    ports:
      - '27019:27017'
    volumes:
      - mongo_db_review:/data/db

  mongo_db_comment:
    container_name: reviews_db_container_comment
    image: mongo:latest
    restart: always
    ports:
      - '27020:27017'
    volumes:
      - mongo_db_comment:/data/db

volumes:
  mongo_db_auth: { }
  mongo_db_review: { }
  mongo_db_comment: { }